name: PR Test Check

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  pr-tests:
    name: Run tests on changed packages
    runs-on: ubuntu-latest

    steps:
      - name: Checkout PR branch and main
        uses: actions/checkout@v3
        with:
            fetch-depth: 0
            ref: ${{ github.event.pull_request.head.ref }}

      - name: Fetch origin/main
        run: |
            git fetch origin main
      - name: Determine Changed Packages
        id: changed
        run: |
            echo "Detecting changed packages..."
            PACKAGES=$(ls -d */ | cut -f1 -d'/')
            echo "PACKAGES : $PACKAGES"

            CHANGED_APPS=""
            for pkg in $PACKAGES; do
            if git diff --name-only origin/main...HEAD | grep -q "^${pkg}/"; then
                echo "Detected changes in: $pkg"
                CHANGED_APPS="$CHANGED_APPS $pkg"
            fi
            done

            if [ -z "$CHANGED_APPS" ]; then
            echo "No changed packages detected."
            echo "changed_apps=" >> $GITHUB_ENV
            exit 0
            fi

            echo "changed_apps=$CHANGED_APPS" >> $GITHUB_ENV
            echo "Changed packages: $CHANGED_APPS"

      - name: Skip if no changed apps
        if: env.changed_apps == ''
        run: echo "No changed apps found. Skipping tests."

      - name: Run Tests on Changed Packages
        if: env.changed_apps != ''
        run: |
          IMAGE_PATH=ghcr.io/${{ github.repository_owner }}/custom-integrations/elastic-package
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker pull $IMAGE_PATH:latest

          for app in ${{ env.changed_apps }}; do
            echo "Running tests for $app"
            docker run --rm -v $PWD:/workspace -w /workspace $IMAGE_PATH:latest sh -c "
              cd $app;
              elastic-package lint;
              elastic-package test;
            "
          done