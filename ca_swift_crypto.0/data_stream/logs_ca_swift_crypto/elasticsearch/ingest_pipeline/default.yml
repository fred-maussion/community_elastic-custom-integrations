---
description: Pipeline to process ca_swift_crypto logs_ca_swift_crypto logs
processors:
  - set:
      tag: set_ecs_version
      field: ecs.version
      value: 8.11.0
  - set:
      tag: copy_original_message
      field: originalMessage
      copy_from: message
  - rename:
      ignore_missing: true
      if: ctx.event?.original == null
      tag: rename_message
      field: originalMessage
      target_field: event.original
  - remove:
      ignore_missing: true
      if: ctx.event?.original != null
      tag: remove_copied_message
      field: originalMessage
  - remove:
      ignore_missing: true
      tag: remove_message
      field: message
  - json:
      tag: json_original
      field: event.original
      target_field: ca_swift_crypto.logs_ca_swift_crypto
  - script:
      tag: script_convert_array_to_string
      description: Ensures the date processor does not receive an array value.
      lang: painless
      source: |
        if (ctx.ca_swift_crypto?.logs_ca_swift_crypto?.timestamp != null &&
            ctx.ca_swift_crypto.logs_ca_swift_crypto.timestamp instanceof ArrayList){
            ctx.ca_swift_crypto.logs_ca_swift_crypto.timestamp = ctx.ca_swift_crypto.logs_ca_swift_crypto.timestamp[0];
        }
  - date:
      if: ctx.ca_swift_crypto?.logs_ca_swift_crypto?.timestamp != null
      tag: date_processor_ca_swift_crypto.logs_ca_swift_crypto.timestamp
      field: ca_swift_crypto.logs_ca_swift_crypto.timestamp
      target_field: event.start
      formats:
        - 'yyyy-MM-dd''T''HH:mm:ss''Z'''
        - ISO8601
  - rename:
      ignore_missing: true
      field: ca_swift_crypto.logs_ca_swift_crypto.user_id
      target_field: user.id
  - rename:
      ignore_missing: true
      field: ca_swift_crypto.logs_ca_swift_crypto.action
      target_field: event.action
  - rename:
      ignore_missing: true
      field: ca_swift_crypto.logs_ca_swift_crypto.status
      target_field: event.outcome
  - convert:
      ignore_failure: true
      ignore_missing: true
      field: ca_swift_crypto.logs_ca_swift_crypto.ip_address
      target_field: source.ip
      type: ip
  - rename:
      ignore_missing: true
      field: ca_swift_crypto.logs_ca_swift_crypto.user_agent
      target_field: user_agent.original
  - rename:
      ignore_missing: true
      field: ca_swift_crypto.logs_ca_swift_crypto.url
      target_field: url.path
  - rename:
      ignore_missing: true
      field: ca_swift_crypto.logs_ca_swift_crypto.logger
      target_field: log.logger
  - rename:
      ignore_missing: true
      field: ca_swift_crypto.logs_ca_swift_crypto.account_id
      target_field: source.user.id
  - convert:
      ignore_failure: true
      ignore_missing: true
      field: ca_swift_crypto.logs_ca_swift_crypto.balance
      target_field: source.user.group.id
      type: string
  - rename:
      ignore_missing: true
      field: ca_swift_crypto.logs_ca_swift_crypto.from_account
      target_field: source.user.id
  - rename:
      ignore_missing: true
      field: ca_swift_crypto.logs_ca_swift_crypto.to_account
      target_field: destination.user.id
  - rename:
      ignore_missing: true
      field: ca_swift_crypto.logs_ca_swift_crypto.transaction_id
      target_field: event.id
  - script:
      tag: script_drop_null_empty_values
      description: Drops null/empty values recursively.
      lang: painless
      source: |
        boolean dropEmptyFields(Object object) {
          if (object == null || object == "") {
            return true;
          } else if (object instanceof Map) {
            ((Map) object).values().removeIf(value -> dropEmptyFields(value));
            return (((Map) object).size() == 0);
          } else if (object instanceof List) {
            ((List) object).removeIf(value -> dropEmptyFields(value));
            return (((List) object).length == 0);
          }
          return false;
        }
        dropEmptyFields(ctx);
  - geoip:
      ignore_missing: true
      tag: geoip_source_ip
      field: source.ip
      target_field: source.geo
  - geoip:
      ignore_missing: true
      tag: geoip_source_asn
      database_file: GeoLite2-ASN.mmdb
      field: source.ip
      target_field: source.as
      properties:
        - asn
        - organization_name
  - rename:
      ignore_missing: true
      tag: rename_source_as_asn
      field: source.as.asn
      target_field: source.as.number
  - rename:
      ignore_missing: true
      tag: rename_source_as_organization_name
      field: source.as.organization_name
      target_field: source.as.organization.name
  - geoip:
      ignore_missing: true
      tag: geoip_destination_ip
      field: destination.ip
      target_field: destination.geo
  - geoip:
      ignore_missing: true
      tag: geoip_destination_asn
      database_file: GeoLite2-ASN.mmdb
      field: destination.ip
      target_field: destination.as
      properties:
        - asn
        - organization_name
  - rename:
      ignore_missing: true
      tag: rename_destination_as_asn
      field: destination.as.asn
      target_field: destination.as.number
  - rename:
      ignore_missing: true
      tag: rename_destination_as_organization_name
      field: destination.as.organization_name
      target_field: destination.as.organization.name
  - append:
      if: ctx.ca_swift_crypto?.logs_ca_swift_crypto?.page == 'login'
      field: event.category
      value:
        - authentication
      allow_duplicates: false
  - append:
      if: ctx.ca_swift_crypto?.logs_ca_swift_crypto?.page == 'login'
      field: event.type
      value:
        - start
      allow_duplicates: false
  - append:
      if: ctx.ca_swift_crypto?.logs_ca_swift_crypto?.page == 'logout'
      field: event.category
      value:
        - authentication
      allow_duplicates: false
  - append:
      if: ctx.ca_swift_crypto?.logs_ca_swift_crypto?.page == 'logout'
      field: event.type
      value:
        - end
      allow_duplicates: false
  - append:
      if: ctx.ca_swift_crypto?.logs_ca_swift_crypto?.page == 'account_summary'
      field: event.category
      value:
        - database
      allow_duplicates: false
  - append:
      if: ctx.ca_swift_crypto?.logs_ca_swift_crypto?.page == 'account_summary'
      field: event.type
      value:
        - access
      allow_duplicates: false
  - append:
      if: ctx.ca_swift_crypto?.logs_ca_swift_crypto?.page == 'transfer'
      field: event.category
      value:
        - database
      allow_duplicates: false
  - append:
      if: ctx.ca_swift_crypto?.logs_ca_swift_crypto?.page == 'transfer'
      field: event.type
      value:
        - change
      allow_duplicates: false
  - append:
      if: ctx.ca_swift_crypto?.logs_ca_swift_crypto?.page == 'account_summary'
      field: event.type
      value:
        - info
      allow_duplicates: false
  - append:
      if: >-
        ctx.ca_swift_crypto?.logs_ca_swift_crypto?.page == 'login' ||
        ctx.ca_swift_crypto?.logs_ca_swift_crypto?.page == 'logout'
      field: event.category
      value:
        - session
      allow_duplicates: false
  - append:
      if: ctx.source?.ip != null
      field: related.ip
      value: '{{{source.ip}}}'
      allow_duplicates: false
  - append:
      if: ctx.user?.id != null
      field: related.user
      value: '{{{user.id}}}'
      allow_duplicates: false
  - append:
      if: ctx.source?.user?.id != null
      field: related.user
      value: '{{{source.user.id}}}'
      allow_duplicates: false
  - append:
      if: ctx.destination?.user?.id != null
      field: related.user
      value: '{{{destination.user.id}}}'
      allow_duplicates: false
  - remove:
      ignore_missing: true
      tag: remove_fields
      field:
        - ca_swift_crypto.logs_ca_swift_crypto.ip_address
        - ca_swift_crypto.logs_ca_swift_crypto.balance
  - remove:
      ignore_failure: true
      ignore_missing: true
      if: ctx?.tags == null || !(ctx.tags.contains("preserve_original_event"))
      tag: remove_original_event
      field: event.original
on_failure:
  - append:
      field: error.message
      value: >-
        Processor {{{_ingest.on_failure_processor_type}}} with tag
        {{{_ingest.on_failure_processor_tag}}} in pipeline
        {{{_ingest.on_failure_pipeline}}} failed with message:
        {{{_ingest.on_failure_message}}}
  - set:
      field: event.kind
      value: pipeline_error
